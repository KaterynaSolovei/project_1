/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

.header-menu__container, .header-overlay__container{
  max-width:1340px;
  margin:auto;
  padding-right:20px;
  padding-left:20px;
}
.btn{
  min-width:250px;
  min-height:60px;
  background-color:rgba(255, 255, 255, 0.1);
  border:2px solid #ffffff;
  padding:0.5em 1em;
  display:flex;
  align-items:center;
  justify-content:center;
  font-size:1.125rem;
  letter-spacing:0.1em;
  transition:0.25s;
}
.btn:hover, .btn:focus{
  background-color:#d66926;
}
*,
*::after,
*::before{
  box-sizing:border-box;
}

html{
  font-size:16px;
  font-family:"Roboto", sans-serif;
  overflow-y:scroll;
  line-height:1.15;
}

h1{
  font-size:3.75rem;
  letter-spacing:0.08em;
  color:#ffffff;
  font-weight:300;
  font-family:"Roboto Slab", serif;
  text-align:center;
}

a{
  text-decoration:none;
  color:#ffffff;
}

.header{
  position:relative;
  min-height:100vh;
  background-color:#2d3651;
  display:grid;
  color:#ffffff;
  background-image:url(../img/img-header.png);
  background-repeat:no-repeat;
  background-position:50% 50%;
  background-size:cover;
  padding:150px 0;
  align-content:center;
}

.header-overlay{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  background-color:#2d3651;
  opacity:0.8;
}
.header-menu{
  position:absolute;
  z-index:2;
  top:0;
  left:0;
  right:0;
}
.header-menu__container{
  display:grid;
  align-items:center;
  grid-template-columns:auto 1fr;
  gap:20px;
}

.header-logo{
  align-self:center;
}
.header-logo__link{
  display:block;
  font-size:1.5rem;
  letter-spacing:0.22em;
  padding:20px 20px 20px 0;
}
.header-logo__accent{
  display:inline-block;
  border:3px solid #d53d27;
  padding:14px 1px 13px 5px;
  margin-right:-7.3px;
}

.header-navbar__btn{
  display:none;
}
.header-navbar__list{
  margin:0;
  padding:0;
  list-style:none;
  display:grid;
  list-style:none;
  grid-template-columns:repeat(auto-fit, minmax(48px, max-content));
  justify-content:end;
  gap:20px;
  margin-right:-10px;
}
.header-navbar__link{
  font-size:18px;
  letter-spacing:0.1em;
  padding:20px 10px;
  transition:color 0.25s;
}
.header-navbar__link:hover, .header-navbar__link:focus{
  color:#d66926;
}

.header-content{
  position:relative;
  z-index:1;
}
.header-content__container{
  max-width:1300px;
  margin:auto;
  padding-right:20px;
  padding-left:20px;
  display:grid;
}
.header-content__title{
  margin:0 0 53px 0;
  text-align:center;
}
.header-content__actions{
  display:flex;
  justify-content:center;
  gap:20px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */